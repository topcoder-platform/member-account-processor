version: 2
defaults: &defaults
  docker:
    - image: cimg/python:3.11.0-browsers
install_dependency: &install_dependency
  name: Installation of build and deployment dependencies.
  command: |
      sudo apt update
      sudo apt install jq
      sudo apt install python3-pip
      sudo pip3 install awscli --upgrade
      sudo pip3 install docker==6.1.3
      sudo pip3 install docker-compose
install_deploysuite: &install_deploysuite
  name: Installation of install_deploysuite.
  command: |
    git clone --branch v1.4.15 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
    cp ./../buildscript/master_deploy.sh .
    cp ./../buildscript/buildenv.sh .
    cp ./../buildscript/awsconfiguration.sh .
build_steps: &build_steps
      # Initialization.
      - checkout
      - setup_remote_docker
      - run: *install_dependency
      - run: *install_deploysuite
      - run:
          name: Executing build.
          command: |
            ./build.sh
      - deploy:
          name: Deploy to AWS
          command: |                  
            #aws --version && ./deploy.sh ${DEPLOY_ENV} $CIRCLE_SHA1
            ./awsconfiguration.sh ${DEPLOY_ENV}
            source awsenvconf
            ./buildenv.sh -e ${DEPLOY_ENV} -b ${LOGICAL_ENV}-member-account-processor-deployvar
            source buildenvvar
            ./master_deploy.sh -d ECS -e ${DEPLOY_ENV} -t latest -s ${LOGICAL_ENV}-global-appvar,${LOGICAL_ENV}-member-account-processor-appvar -i member-account-processor -p FARGATE
jobs:
  # Build & Deploy against development backend
  "build-dev":
    <<: *defaults
    environment:
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
    steps: *build_steps
  "build-prod":
    <<: *defaults
    environment:
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"
    steps: *build_steps  
workflows:
  version: 2
  build:
    jobs:
      # Development builds are executed on "develop" branch only.
      - "build-dev":
          context : org-global      
          filters:
            branches:
              only: [ "dev", "dev-circleci", 'feat/onboard-flow-based-on-reg-source' ]
      - "build-prod":
          context : org-global      
          filters:
            branches:
              only: master
